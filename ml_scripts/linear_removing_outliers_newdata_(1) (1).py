# -*- coding: utf-8 -*-
"""linear_removing outliers newdata (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nU2MGGd0mNquXeT9O1HqCvtGEAJEZ7he
"""

import pandas as pd

oldData = pd.read_csv("yield.csv")
oldData.sort_values(by=['Item'], inplace=True)
oldData['Item'].unique()

oldData = pd.read_csv("yield.csv")
oldData.sort_values(by=['Year'], inplace=True)
oldData['Year'].unique()
#len(oldData['Year'].unique())

df = pd.read_csv("newdata.csv")
print(df.head())

df['Item'].unique()

len(df)

df.drop(df[df['Item'] != 1].home, inplace = True)

len(df)

df.columns

import sklearn
from sklearn import linear_model
import statsmodels.api as sm

df

x = df[['Year']]
y = df['Value']

# with sklearn
regr = linear_model.LinearRegression()
regr.fit(x, y)

print('Intercept: \n', regr.intercept_)
print('Coefficients: \n', regr.coef_)

# with statsmodels
x = sm.add_constant(x) # adding a constant

model = sm.OLS(y, x).fit()
predictions = model.predict(x)

print_model = model.summary()
print(print_model)

#model.predict(["10000"])


regr.predict([[57]])

m = regr.coef_
c = regr.intercept_
x = 56

y = m*x + c
print(y)

df.iloc[1:2]

df[:-5]

print(predictions)

from sklearn.metrics import mean_squared_error, r2_score
print("Mean squared error: %.2f" % mean_squared_error(df['Value'], predictions))

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
# Plot outputs
plt.plot(df['Year'], predictions, color="black")
plt.scatter(df['Year'], df['Value'], color="blue")


# plt.xticks(())
# plt.yticks(())

plt.show()



